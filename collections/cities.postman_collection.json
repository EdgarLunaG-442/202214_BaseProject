{
	"info": {
		"_postman_id": "649f7b43-aa13-4709-b428-80a67d69ff29",
		"name": "cities",
		"description": "Representa los productos característicos que conforman la cultura gastronómica.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create city",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"   pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Bogota\",\n  \"country\": \"Colombia\",\n  \"citizens\": 10000000\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/cities",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cities"
					]
				},
				"description": "Crea un nuevo producto"
			},
			"response": [
				{
					"name": "Create city",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": ""
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [],
					"cookie": [],
					"body": "{\n    \"name\": \"Bogota\",\n    \"country\": \"Colombia\",\n    \"citizens\": 10000000,\n    \"id\": \"44d446e6-6711-48ab-a161-e0ef24a35245\"\n}"
				}
			]
		},
		{
			"name": "Create invalid city",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"   pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"country\": \"Colombia\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/cities",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cities"
					]
				},
				"description": "Crea un nuevo producto"
			},
			"response": [
				{
					"name": "Create invalid city",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"country\": \"Colombia\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": ""
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "144"
						},
						{
							"key": "ETag",
							"value": "W/\"90-3nGJs5292Ep+QsputVG/9YPZqCI\""
						},
						{
							"key": "Date",
							"value": "Sun, 18 Sep 2022 13:41:36 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"statusCode\": 400,\n    \"message\": [\n        \"name must be a string\",\n        \"citizens must be a number conforming to the specified constraints\"\n    ],\n    \"error\": \"Bad Request\"\n}"
				}
			]
		},
		{
			"name": "Get cities",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Number of products > ' + 0, function () {",
							"   var data = pm.response.json()",
							"   pm.expect(data.length).to.greaterThan(0)",
							"});",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"   pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/cities",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cities"
					]
				},
				"description": "Obtiene una lista de todos los productos"
			},
			"response": [
				{
					"name": "Get cities",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": ""
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [],
					"cookie": [],
					"body": "[\n    {\n        \"id\": \"5b15eae3-9df1-46e4-91f1-1ca46c935314\",\n        \"name\": \"Bogota\",\n        \"country\": \"Colombia\",\n        \"citizens\": 10000000,\n        \"supermarkets\": []\n    }\n]"
				}
			]
		},
		{
			"name": "Get city",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"   pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/cities/{{existingCity}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cities",
						"{{existingCity}}"
					]
				},
				"description": "Obtiene un producto segun el ID."
			},
			"response": [
				{
					"name": "Get city",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": ""
						}
					},
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [],
					"cookie": [],
					"body": "{\n    \"id\": \"ed7ff8b1-df08-40c7-9c8e-29d89417d023\",\n    \"name\": \"string\",\n    \"country\": \"string\",\n    \"citizens\": 0,\n    \"supermarkets\": []\n}"
				}
			]
		},
		{
			"name": "Get non-existing city",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"   pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.message).to.eql(\"City with given Id cannot be found\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/cities/{{wrongCity}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cities",
						"{{wrongCity}}"
					]
				},
				"description": "Ejemplo de un request para obtener un producto que no existe."
			},
			"response": [
				{
					"name": "Get non-existing city",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": ""
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [],
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"message\": \"City with given Id cannot be found\",\n    \"error\": \"Not Found\"\n}"
				}
			]
		},
		{
			"name": "Update city",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"   pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Bogota\",\n  \"country\": \"Colombia\",\n  \"citizens\": 9000000\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/cities/{{existingCity}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cities",
						"{{existingCity}}"
					]
				},
				"description": "Actualización de un producto segun el ID."
			},
			"response": [
				{
					"name": "Update city",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": ""
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [],
					"cookie": [],
					"body": "{\n    \"id\": \"ed7ff8b1-df08-40c7-9c8e-29d89417d023\",\n    \"name\": \"Bogota\",\n    \"country\": \"Colombia\",\n    \"citizens\": 9000000,\n    \"supermarkets\": []\n}"
				}
			]
		},
		{
			"name": "Update non-existing city",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"   pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.message).to.eql(\"City with given Id cannot be found\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Bogota\",\n  \"country\": \"Colombia\",\n  \"citizens\": 9000000\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/cities/{{wrongCity}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cities",
						"{{wrongCity}}"
					]
				},
				"description": "Ejemplo de un request para actualizar un producto que no existe."
			},
			"response": [
				{
					"name": "Update non-existing city",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": ""
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [],
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"message\": \"City with given Id cannot be found\",\n    \"error\": \"Not Found\"\n}"
				}
			]
		},
		{
			"name": "Delete city",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"   pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/cities/{{existingCity}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cities",
						"{{existingCity}}"
					]
				},
				"description": "Eliminación de un producto segun el ID"
			},
			"response": [
				{
					"name": "Delete city",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": ""
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "json",
					"header": [],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Delete non-existing city",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"   pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.message).to.eql(\"City with given Id cannot be found\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"historia\":null\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/cities/{{wrongCity}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cities",
						"{{wrongCity}}"
					]
				},
				"description": "Ejemplo de un request para eliminar un producto que no existe."
			},
			"response": [
				{
					"name": "Delete non-existing city",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": ""
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [],
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"message\": \"City with given Id cannot be found\",\n    \"error\": \"Not Found\"\n}"
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3000/api/v1"
		},
		{
			"key": "existingCity",
			"value": "ed7ff8b1-df08-40c7-9c8e-29d89417d023"
		},
		{
			"key": "wrongCity",
			"value": "9f77c649-1f22-43d4-a145-efff05eac0c3"
		}
	]
}